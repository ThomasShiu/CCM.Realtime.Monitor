<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ assembly name="MySql.Data" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="MySql.Data.MySqlClient" #>
/*******************************************************************************
 * Copyright © 2016 CCM.Framework 版權所有
 * Author: CCM.MIS
 * Description: CCM快速開發平臺
 * Website：http://www.ccm3s.com/
*********************************************************************************/
using System;
using System.Linq;
using System.Collections.Generic;
using CCM.Code;
using CCM.Domain;
using CCM.Repository;
//todo: 請修改對應的namespace
namespace CCM.Application 
{        
		 <#
			//修改connection string
            string connectionString = "server=192.168.105.149;user id=ccm050606;Pwd=ccm12345678;persistsecurityinfo=True;database=ccm_rtdb";
            //表格名稱
            string tableName = "rtm_machines";

            // 取得表格資訊
            //string sqlCommand = String.Format("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='ccm_rtdb' ");
            string sqlCommand = String.Format("select COLUMN_KEY,COLUMN_NAME, IS_NULLABLE, CASE DATA_TYPE "+
											 "   WHEN 'varchar' THEN 'string' "+
											 "   WHEN 'longtext' THEN 'string' "+
											 "   WHEN 'bit' THEN 'bool' "+
											 "   ELSE DATA_TYPE END DATA_TYPE, CHARACTER_MAXIMUM_LENGTH  from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '" + tableName + "' ");
            //DataTable table = null;

            using (MySqlConnection conn = new MySqlConnection(connectionString))
            {		
				MySqlCommand cmd = new MySqlCommand(sqlCommand, conn);
                conn.Open();
                using (MySqlDataReader reader = cmd.ExecuteReader())
                {		

			#>     
public class <#= tableName #>App
    {
        private I<#= tableName #>Repository service = new <#= tableName #>Repository();     

	public List<<#= tableName #>Entity> GetList(string keyword = "")
        {
            var expression = ExtLinq.True<<#= tableName #>Entity>();
            if (!string.IsNullOrEmpty(keyword))
            {
                expression = expression.And(t => t.F_FullName.Contains(keyword));
                expression = expression.Or(t => t.F_EnCode.Contains(keyword));
            }
            //expression = expression.And(t => t.F_Category == 1);
            return service.IQueryable(expression).OrderBy(t => t.F_CreatorTime).ToList();
        }     
	 public List<<#= tableName #>Entity> GetList(Pagination pagination, string  keyword = "")
        {
            var expression = ExtLinq.True<<#= tableName #>Entity>();
            if (!string.IsNullOrEmpty(keyword))
            {
                expression = expression.And(t => t.OFFICIAL_NM.Contains(keyword));
                expression = expression.Or(t => t.SUBJECT.Contains(keyword));
            }
            //expression = expression.And(t => t.F_Category == 2);
            //return service.IQueryable(expression).OrderBy(t => t.ISSUEID).ToList();
            return service.FindList(expression, pagination);
        }
        public <#= tableName #>Entity GetForm(string keyValue)
        {
            return service.FindEntity(keyValue);
        }
        public void DeleteForm(string keyValue)
        {
            if (service.IQueryable().Count(t => t.F_Id.Equals(keyValue)) > 0)
            {
                throw new Exception("刪除失敗！操作的物件包含了下級資料。");
            }
            else
            {
                service.Delete(t => t.F_Id == keyValue);
            }
        }
        public void SubmitForm(<#= tableName #>Entity tableEntity, string keyValue)
        {
            if (!string.IsNullOrEmpty(keyValue))
            {
                tableEntity.Modify(keyValue);
                service.Update(tableEntity);
            }
            else
            {
                tableEntity.Create();
                service.Insert(tableEntity);
            }
        }
			
		                               
}
}
 <#
                    
			 }
        }

			 #>